{"mappings":"AC6CE,IA7CF,MACI,YAAY,CAAA,SAAE,CAAQ,CAAA,WAAE,CAAU,CAAE,CAAE,CACpC,IAAI,CAAC,QAAQ,CAAG,EAChB,IAAI,CAAC,UAAU,CAAG,EAClB,IAAI,CAAC,QAAQ,CAAG,SAAS,aAAa,CAAC,GAEvC,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,uBAC3C,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,wBAC5C,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,uBAC3C,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,uBAE3C,IAAI,CAAC,KAAK,EACZ,CAEA,OAAQ,CACN,IAAI,CAAC,UAAU,CAAG,YAAY,KAC5B,IAAM,EAAM,IAAI,KACV,EAAO,IAAI,CAAC,UAAU,CAAG,EAE/B,GAAI,GAAQ,EAAG,CACb,cAAc,IAAI,CAAC,UAAU,EAC7B,IAAI,CAAC,WAAW,CAAC,EAAG,EAAG,EAAG,GAC1B,MACF,CAEA,IAAM,EAAO,KAAK,KAAK,CAAC,EAAQ,OAC1B,EAAQ,KAAK,KAAK,CAAE,EAAQ,MAAyB,MACrD,EAAO,KAAK,KAAK,CAAE,EAAQ,KAAoB,KAC/C,EAAO,KAAK,KAAK,CAAE,EAAQ,IAAc,KAE/C,IAAI,CAAC,WAAW,CAAC,EAAM,EAAO,EAAM,EACtC,EAAG,IACL,CAEA,YAAY,CAAI,CAAE,CAAK,CAAE,CAAI,CAAE,CAAI,CAAE,CACnC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,EAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAG,IAAI,CAAC,GAAG,CAAC,GACrC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,IAAI,CAAC,GAAG,CAAC,GACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAG,IAAI,CAAC,GAAG,CAAC,EACtC,CAEA,IAAI,CAAK,CAAE,CACT,OAAO,OAAO,GAAO,QAAQ,CAAC,EAAG,IACnC,CACF,EACmB,CACjB,SAAU,WACV,WAAY,IAAI,KAAK,wBACvB","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\nclass $35da740d59af89ba$var$CountdownTimer {\n    constructor({ selector: selector, targetDate: targetDate }){\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.timerRef = document.querySelector(selector);\n        this.daysRef = this.timerRef.querySelector('[data-value=\"days\"]');\n        this.hoursRef = this.timerRef.querySelector('[data-value=\"hours\"]');\n        this.minsRef = this.timerRef.querySelector('[data-value=\"mins\"]');\n        this.secsRef = this.timerRef.querySelector('[data-value=\"secs\"]');\n        this.start();\n    }\n    start() {\n        this.intervalId = setInterval(()=>{\n            const now = new Date();\n            const time = this.targetDate - now;\n            if (time <= 0) {\n                clearInterval(this.intervalId);\n                this.updateTimer(0, 0, 0, 0);\n                return;\n            }\n            const days = Math.floor(time / 86400000);\n            const hours = Math.floor(time % 86400000 / 3600000);\n            const mins = Math.floor(time % 3600000 / 60000);\n            const secs = Math.floor(time % 60000 / 1000);\n            this.updateTimer(days, hours, mins, secs);\n        }, 1000);\n    }\n    updateTimer(days, hours, mins, secs) {\n        this.daysRef.textContent = days;\n        this.hoursRef.textContent = this.pad(hours);\n        this.minsRef.textContent = this.pad(mins);\n        this.secsRef.textContent = this.pad(secs);\n    }\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n}\nnew $35da740d59af89ba$var$CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2025 00:00:00')\n});\n\n\n//# sourceMappingURL=JS2-HW12.83fdaf1a.js.map\n","class CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n      this.selector = selector;\r\n      this.targetDate = targetDate;\r\n      this.timerRef = document.querySelector(selector);\r\n  \r\n      this.daysRef = this.timerRef.querySelector('[data-value=\"days\"]');\r\n      this.hoursRef = this.timerRef.querySelector('[data-value=\"hours\"]');\r\n      this.minsRef = this.timerRef.querySelector('[data-value=\"mins\"]');\r\n      this.secsRef = this.timerRef.querySelector('[data-value=\"secs\"]');\r\n  \r\n      this.start();\r\n    }\r\n  \r\n    start() {\r\n      this.intervalId = setInterval(() => {\r\n        const now = new Date();\r\n        const time = this.targetDate - now;\r\n  \r\n        if (time <= 0) {\r\n          clearInterval(this.intervalId);\r\n          this.updateTimer(0, 0, 0, 0);\r\n          return;\r\n        }\r\n  \r\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n        const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n  \r\n        this.updateTimer(days, hours, mins, secs);\r\n      }, 1000);\r\n    }\r\n  \r\n    updateTimer(days, hours, mins, secs) {\r\n      this.daysRef.textContent = days;\r\n      this.hoursRef.textContent = this.pad(hours);\r\n      this.minsRef.textContent = this.pad(mins);\r\n      this.secsRef.textContent = this.pad(secs);\r\n    }\r\n  \r\n    pad(value) {\r\n      return String(value).padStart(2, '0');\r\n    }\r\n  }\r\n  new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Jul 17, 2025 00:00:00'),\r\n  });  "],"names":["constructor","selector","targetDate","timerRef","document","querySelector","daysRef","hoursRef","minsRef","secsRef","start","intervalId","setInterval","now","Date","time","clearInterval","updateTimer","days","Math","floor","hours","mins","secs","textContent","pad","value","String","padStart"],"version":3,"file":"JS2-HW12.83fdaf1a.js.map"}